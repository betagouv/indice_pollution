from . import ForecastMixin, EpisodeMixin
from dateutil.parser import parse
from datetime import timedelta

class Service(object):
    website = 'http://www.airpl.org/'
    attributes_key = 'properties'
    use_dateutil_parser = True

    insee_epci = {
        "49007": "244900015",
        "49307": "244900015",
        "49353": "244900015",
        "49015": "244900015",
        "49246": "244900015",
        "49267": "244900015",
        "49214": "244900015",
        "49323": "244900015",
        "49035": "244900015",
        "49200": "244900015",
        "49377": "244900015",
        "49223": "244900015",
        "49020": "244900015",
        "49129": "244900015",
        "49278": "244900015",
        "49298": "244900015",
        "49048": "244900015",
        "49294": "244900015",
        "49241": "244900015",
        "49135": "244900015",
        "49055": "244900015",
        "49271": "244900015",
        "49306": "244900015",
        "49339": "244900015",
        "49338": "244900015",
        "49329": "244900015",
        "49326": "244900015",
        "49130": "244900015",
        "49028": "244900015",
        "85191": "248500589",
        "85008": "248500589",
        "85089": "248500589",
        "85155": "248500589",
        "85300": "248500589",
        "85081": "248500589",
        "85213": "248500589",
        "85046": "248500589",
        "85160": "248500589",
        "85118": "248500589",
        "85291": "248500589",
        "85093": "248500589",
        "85285": "248500589",
        "49099": "200071678",
        "49373": "200071678",
        "49332": "200071678",
        "49193": "200071678",
        "49192": "200071678",
        "49343": "200071678",
        "49355": "200071678",
        "49299": "200071678",
        "49269": "200071678",
        "49027": "200071678",
        "49260": "200071678",
        "49381": "200071678",
        "49371": "200071678",
        "49109": "200071678",
        "49231": "200071678",
        "49352": "200071678",
        "49211": "200071678",
        "49195": "200071678",
        "49240": "200071678",
        "49336": "200071678",
        "49058": "200071678",
        "49070": "200071678",
        "49310": "200071678",
        "49057": "200071678",
        "49102": "200071678",
        "49236": "200071678",
        "72181": "247200132",
        "72003": "247200132",
        "72095": "247200132",
        "72008": "247200132",
        "72213": "247200132",
        "72386": "247200132",
        "72054": "247200132",
        "72328": "247200132",
        "72260": "247200132",
        "72198": "247200132",
        "72320": "247200132",
        "72257": "247200132",
        "72065": "247200132",
        "72280": "247200132",
        "72001": "247200132",
        "72360": "247200132",
        "72247": "247200132",
        "72073": "247200132",
        "72130": "247200132",
        "44109": "244400404",
        "44162": "244400404",
        "44143": "244400404",
        "44190": "244400404",
        "44114": "244400404",
        "44215": "244400404",
        "44047": "244400404",
        "44026": "244400404",
        "44035": "244400404",
        "44020": "244400404",
        "44172": "244400404",
        "44204": "244400404",
        "44009": "244400404",
        "44198": "244400404",
        "44194": "244400404",
        "44018": "244400404",
        "44101": "244400404",
        "44166": "244400404",
        "44120": "244400404",
        "44150": "244400404",
        "44074": "244400404",
        "44094": "244400404",
        "44024": "244400404",
        "44171": "244400404",
    }

class Episode(Service, EpisodeMixin):
    url = 'https://data.airpl.org/geoserver/alrt3j_pays_de_la_loire/wfs'

    def params(self, date_, insee):
        centre = self.centre(insee)

        return {
            'where': '',
            'outfields': self.outfields,
            'outputFormat': 'application/json',
            'geometry': f'{centre[0]},{centre[1]}',
            'inSR': '4326',
            'outSR': '4326',
            'geometryType': 'esriGeometryPoint',
            'request': 'GetFeature',
            'typeName': 'alrt3j_pays_de_la_loire'
        }

class Forecast(Service, ForecastMixin):
    url = 'https://data.airpl.org/geoserver/ind_pays_de_la_loire/wfs'

    attributes_key = 'properties'

    @classmethod
    def params(cls, date_, insee):
        epci = cls.insee_epci[insee]
        filter_zone = f'<PropertyIsEqualTo><PropertyName>code_zone</PropertyName><Literal>{epci}</Literal></PropertyIsEqualTo>'
        filter_date = f'<PropertyIsGreaterThanOrEqualTo><PropertyName>date_ech</PropertyName><Function name="dateParse"><Literal>yyyy-MM-dd</Literal><Literal>{date_}</Literal></Function></PropertyIsGreaterThanOrEqualTo>'

        return {
            'request': 'GetFeature',
            'service': 'WFS',
            'version': '1.1',
            'typeName': 'ind_pays_de_la_loire:ind_pays_de_la_loire_agglo',
            'Filter': f"<Filter><And>{filter_zone}{filter_date}</And></Filter>",
            'outputFormat': 'json',
        }